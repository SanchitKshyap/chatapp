{"version":3,"sources":["components/Common/Input.jsx","components/Common/Button.jsx","components/Common/Form.jsx","redux/actions.js","components/Common/ToggleSwitch.jsx","pages/Login.jsx","pages/Register.jsx","components/Common/Avatar.jsx","components/Lists/ListItem.jsx","components/Lists/ListNotification.jsx","components/Lists/Search.jsx","components/Lists/ListContainer.jsx","components/Common/FileUpload.jsx","components/Emoji/Emojis.jsx","components/Emoji/EmojiContainer.jsx","components/Messages/ChatInput.jsx","components/Messages/Image.jsx","components/Messages/Message.jsx","components/Messages/ImageViewer.jsx","components/Messages/MessagesContainer.jsx","components/Navbar.jsx","components/Settings.jsx","components/Snackbar/Snackbar.jsx","components/Snackbar/SnackbarContainer.jsx","components/AccountPopup.jsx","pages/Home.jsx","hooks/index.js","App.js","serviceWorker.js","redux/reducers.js","redux/store.js","index.js"],"names":["StyledInput","styled","input","props","error","StyledLabel","label","selected","Wrapper","div","Input","type","name","value","onChange","onBlur","onFocus","useState","set","StyledButton","button","theme","buttonText","buttonBorder","buttonBackground","transition","Button","children","onClick","disabled","StyledForm","form","Error","p","Form","title","onSubmit","e","preventDefault","login","payload","setActiveChat","ToggleLabel","state","ToggleSpan","span","ToggleSwitch","Page","CheckLabel","Login","username","touched","password","rememberMe","setError","dispatch","useDispatch","handleBlur","handleChange","val","errors","trim","handleSubmit","a","fetch","method","headers","credentials","body","JSON","stringify","remember","resp","status","json","target","autocomplete","Object","keys","some","x","to","Success","withTheme","history","passwordConfirm","firstname","lastname","email","success","setSuccess","setTimeout","push","AvatarWrapper","AvatarImg","size","image","Activity","active","Avatar","className","displayStatus","alt","elemBackgroundHover","backgroundColor","Column","Name","LastMessage","LastMessageTime","chatActive","onContextMenu","avatar","userActive","message","timestamp","Date","toLocaleTimeString","slice","NotificationText","margin","ButtonRow","ListNotification","id","sender","socket","handleDelete","emit","nonActionable","actionable","inputBackground","SearchInput","search","placeholder","border","background","open","Scroll","SectionTitle","backgroundText","elemBackground","Lists","activeList","setActiveList","setSearch","activeChat","useSelector","rootReducer","notifications","user","chats","filter","d","recipient","includes","friends","accounts","disp","dispTitle","Search","map","ListItem","key","recipientId","last_message","last_message_timestamp","check","find","handleNewChat","Label","FileUpload","file","text","uid","htmlFor","currentTarget","files","length","split","emojis","right","top","Emoji","EmojiContainer","foregroundColor","ImageBtn","EmojiBtn","FaSmile","ChatInput","activeChatId","ref","useRef","emojiSelector","handleFile","extension","chat","err","handleFocusBlur","innerText","useEffect","current","contentEditable","onKeyUp","suppressContentEditableWarning","rect","getBoundingClientRect","width","height","icon","Img","img","Image","src","onError","onLoad","justify","MessageContent","borderRadius","messageBackground","Message","received","Shadow","ImageViewer","callback","Scrollable","Messages","ScrollRef","imageViewer","scrollTop","scrollHeight","messages","Contacts","FaUserFriends","Chats","FaComments","Notifications","FaBell","Settings","FaCog","NightMode","FaMoon","nightModeBtn","ListOptions","AppOptions","StyledAvatar","Navbar","setPos","setNightModeState","nightModeState","BackgroundShadow","Modal","Row","Title","h1","Option","Description","visible_in_searches","update","bgColor","DismissBtn","CloseBtn","IoIosClose","Snackbar","uuid","dismiss","SnackbarContainer","dismissed","Username","AccountPopup","logoutFunc","Home","listState","setListState","accountOverview","handleListChange","useSocket","loggedIn","io","on","loadChats","loadFriends","loadUsers","loadNotifications","loadMessages","addMessageToChat","addFriend","addChat","addNotification","dismissNotification","deleteNotification","setFriendOnline","setFriendOffline","updateAccount","close","GlobalStyle","createGlobalStyle","App","auth","ui","mode","exact","path","component","Register","render","Boolean","window","location","hostname","match","initialState","notificationsReducer","action","j","findIndex","i","k","friendsReducer","chatsReducer","chatId","activeChatReducer","combineReducers","persistConfig","storage","localForage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e6189a7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  border-radius: 6px;\r\n  border: ${props =>\r\n    props.error\r\n      ? \"1px solid rgba(213, 0, 0, 1)\"\r\n      : \"1px solid rgba(0, 0, 0, 0.2)\"};\r\n  padding: 0.75em;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  margin: 0.5em 0;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.875em;\r\n  color: rgba(0, 0, 0, 0.4);\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  transform: translatex(0.75em);\r\n  transform: ${props => props.selected && \"translatey(-65%)\"};\r\n  font-size: ${props => props.selected && \".7em\"};\r\n  color: ${props => props.selected && \"rgba(0, 0, 0, .6)\"};\r\n  align-items: center;\r\n  display: flex;\r\n  pointer-events: none;\r\n  transition: 0.5s ease;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  flex-grow: 1;\r\n  margin: 0.75em 0;\r\n`;\r\n\r\nconst Input = ({\r\n  label,\r\n  type,\r\n  name,\r\n  value,\r\n  onChange,\r\n  error,\r\n  onBlur,\r\n  onFocus\r\n}) => {\r\n  const [selected, set] = useState(false);\r\n  const handleBlur = () => {\r\n    value === \"\" && set(!selected);\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    value === \"\" && set(!selected);\r\n    onFocus && onFocus();\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <StyledLabel selected={selected}>{label}</StyledLabel>\r\n      <StyledInput\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        onBlur={handleBlur}\r\n        onFocus={handleFocus}\r\n        error={error}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  margin-top: 1em;\r\n  padding: 0.5em;\r\n  justify-content: center;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600;\r\n  color: ${props => props.theme.buttonText || \"rgb(245,245,245)\"};\r\n  font-size: 1em;\r\n  border-radius: 6px;\r\n  border: ${props => props.theme.buttonBorder || \"none\"};\r\n  background-color: ${props =>\r\n    props.theme.buttonBackground || \"rgb(31, 31, 31)\"};\r\n  outline: none;\r\n  transition: ${props => props.theme.transition};\r\n  &:hover {\r\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\r\n      0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);\r\n  }\r\n  &:active {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, onClick, disabled }) => (\r\n  <StyledButton disabled={disabled} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n  border-radius: 6px;\r\n  padding: 2em 2em 2em 2em;\r\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 2px 1px -1px rgba(0, 0, 0, 0.12),\r\n    0 1px 3px 0 rgba(0, 0, 0, 0.2);\r\n  max-width: 500px;\r\n  & > h1 {\r\n    font-family: \"Open Sans\", sans-serif;\r\n    font-weight: 700;\r\n    color: rgba(0, 0, 0, 0.7);\r\n  }\r\n  @media (max-width: 576px) {\r\n    border: none;\r\n    box-shadow: none;\r\n    min-width: 100%;\r\n  }\r\n`;\r\n\r\nconst Error = styled.p`\r\n  text-align: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.875em;\r\n  color: rgba(213, 0, 0, 1);\r\n`;\r\n\r\nconst Form = ({ title, error, children, onSubmit }) => (\r\n  <StyledForm\r\n    onSubmit={e => {\r\n      e.preventDefault();\r\n      onSubmit(e);\r\n    }}\r\n  >\r\n    {title && <h1>{title}</h1>}\r\n    {error && <Error>{error}</Error>}\r\n    {children}\r\n  </StyledForm>\r\n);\r\n\r\nexport default Form;\r\n","export const LOAD_NOTIFICATIONS = \"LOAD_NOTIFICATIONS\";\r\nexport const LOAD_FRIENDS = \"LOAD_FRIENDS\";\r\nexport const LOAD_CHATS = \"LOAD_CHATS\";\r\nexport const LOAD_USERS = \"LOAD_USERS\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const ADD_FRIEND = \"ADD_FRIEND\";\r\nexport const SET_FRIEND_ONLINE = \"SET_FRIEND_ONLINE\";\r\nexport const SET_FRIEND_OFFLINE = \"SET_FRIEND_OFFLINE\";\r\n\r\nexport const ADD_CHAT = \"ADD_CHAT\";\r\nexport const SET_ACTIVE_CHAT = \"SET_ACTIVE_CHAT\";\r\nexport const ADD_MESSAGE_TO_CHAT = \"ADD_MESSAGE_TO_CHAT\";\r\nexport const LOAD_ACTIVE_CHAT_MESSAGES = \"LOAD_ACTIVE_CHAT_MESSAGES\";\r\n\r\nexport const ADD_NOTIFICATION = \"ADD_NOTIFICATION\";\r\nexport const DISMISS_NOTIFICATION = \"DISMISS_NOTIFICATION\";\r\nexport const DELETE_NOTIFICATION = \"DELETE_NOTIFICATION\";\r\n\r\nexport const ERROR = \"ERROR\";\r\n\r\nexport const ACCOUNT_UPDATE = \"ACCOUNT_UPDATE\";\r\n\r\nexport const SET_NIGHT_MODE = \"SET_NIGHT_MODE\";\r\n\r\nexport const REAUTH = \"REAUTH\";\r\n\r\nexport const updateAccount = e => ({ type: ACCOUNT_UPDATE, payload: e });\r\n\r\nexport const login = e => ({ type: LOGIN, payload: e });\r\nexport const logout = () => ({ type: LOGOUT });\r\n\r\nexport const loadChats = e => ({ type: LOAD_CHATS, payload: e });\r\nexport const loadUsers = e => ({ type: LOAD_USERS, payload: e });\r\nexport const loadFriends = e => ({ type: LOAD_FRIENDS, payload: e });\r\nexport const loadNotifications = e => ({\r\n  type: LOAD_NOTIFICATIONS,\r\n  payload: e\r\n});\r\n\r\nexport const addFriend = e => ({ type: ADD_FRIEND, payload: e });\r\nexport const setFriendOnline = e => ({ type: SET_FRIEND_ONLINE, payload: e });\r\nexport const setFriendOffline = e => ({ type: SET_FRIEND_OFFLINE, payload: e });\r\n\r\nexport const addChat = e => ({ type: ADD_CHAT, payload: e });\r\nexport const setActiveChat = e => ({ type: SET_ACTIVE_CHAT, payload: e });\r\nexport const addMessageToChat = e => ({\r\n  type: ADD_MESSAGE_TO_CHAT,\r\n  payload: e\r\n});\r\nexport const loadMessages = e => ({\r\n  type: LOAD_ACTIVE_CHAT_MESSAGES,\r\n  payload: e\r\n});\r\n\r\nexport const addNotification = e => ({ type: ADD_NOTIFICATION, payload: e });\r\nexport const dismissNotification = e => ({\r\n  type: DISMISS_NOTIFICATION,\r\n  payload: e\r\n});\r\nexport const deleteNotification = e => ({\r\n  type: DELETE_NOTIFICATION,\r\n  payload: e\r\n});\r\n\r\nexport const error = e => ({ type: ERROR, payload: e });\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ToggleLabel = styled.label`\r\n  display: flex;\r\n  cursor: pointer;\r\n  min-width: 50px;\r\n  min-height: 25px;\r\n  border-radius: 25px;\r\n  position: relative;\r\n  transition: background-color 0.2s;\r\n  background: ${props => (props.state ? \"rgba(90, 216, 177, 1)\" : \"rgba(0, 0, 0, 0.4)\")};\r\n`;\r\n\r\nconst ToggleSpan = styled.span`\r\n  position: absolute;\r\n  top: 2px;\r\n  left: 2px;\r\n  min-width: 21px;\r\n  min-height: 21px;\r\n  border-radius: 50%;\r\n  transition: 0.2s;\r\n  background: rgb(245, 245, 245);\r\n  transform: ${props => (props.state ? \"translateX(calc(100% + 4px))\" : \"unset\")};\r\n`;\r\n\r\n\r\nconst ToggleSwitch = ({ onClick, state}) => (\r\n  <ToggleLabel onClick={onClick} state={state}>\r\n    <ToggleSpan state={state} />\r\n  </ToggleLabel>\r\n)\r\n\r\nexport default ToggleSwitch;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Input from \"../components/Common/Input\";\r\nimport Button from \"../components/Common/Button\";\r\nimport Form from \"../components/Common/Form\";\r\nimport { login } from \"../redux/actions\";\r\nimport ToggleSwitch from \"../components/Common/ToggleSwitch\";\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  & > p {\r\n    text-align: center;\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 0.875em;\r\n    color: rgba(0, 0, 0, 0.6);\r\n\r\n    & > a {\r\n      text-decoration: none;\r\n      color: inherit;\r\n      color: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nconst CheckLabel = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.775em;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  & > span {\r\n    margin-right: .5rem\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const [state, set] = useState({\r\n    username: { touched: false, value: \"\" },\r\n    password: { touched: false, value: \"\" },\r\n    rememberMe: false\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleBlur = e =>\r\n    set({ ...state, [e]: { ...state[e], touched: true } });\r\n  const handleChange = (e, val) =>\r\n    set({ ...state, [e]: { ...state[e], value: val } });\r\n\r\n  const validation = () => ({\r\n    username: state.username.value.trim() !== \"\",\r\n    password: state.password.value.trim() !== \"\"\r\n  });\r\n\r\n  const errors = validation();\r\n\r\n  const handleSubmit = async e => {\r\n    try {\r\n      const resp = await fetch(\"/api/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        body: JSON.stringify({\r\n          username: state.username.value,\r\n          password: state.password.value,\r\n          remember: state.rememberMe\r\n        })\r\n      });\r\n\r\n      if (resp.status === 200) {\r\n        const json = await resp.json();\r\n        dispatch(login(json));\r\n      } else if (resp.status === 401) {\r\n        setError(\"Incorrect username/password\");\r\n      }\r\n    } catch (err) {\r\n      // Ignore\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Form title=\"Login\" error={error} onSubmit={handleSubmit}>\r\n        <Input\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={state.username.value}\r\n          onChange={e => handleChange(\"username\", e.target.value)}\r\n          error={state.username.touched ? !errors[\"username\"] : false}\r\n          onBlur={() => handleBlur(\"username\")}\r\n          autocomplete=\"username\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={state.password.value}\r\n          onChange={e => handleChange(\"password\", e.target.value)}\r\n          error={state.password.touched ? !errors[\"password\"] : false}\r\n          onBlur={() => handleBlur(\"password\")}\r\n          autocomplete=\"password\"\r\n        />\r\n        <CheckLabel>\r\n          <span>Remember me</span>\r\n          <ToggleSwitch\r\n            onClick={() => set({ ...state, rememberMe: !state.rememberMe })}\r\n            state={state.rememberMe}\r\n          />\r\n        </CheckLabel>\r\n        <Button\r\n          type=\"submit\"\r\n          disabled={!Object.keys(errors).some(x => errors[x])}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Form>\r\n      <p>\r\n        Don't have an account? <Link to=\"/register\">Register</Link>\r\n      </p>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport Input from \"../components/Common/Input\";\r\nimport Button from \"../components/Common/Button\";\r\nimport Form from \"../components/Common/Form\";\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  & > p {\r\n    text-align: center;\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 0.875em;\r\n    color: rgba(0, 0, 0, 0.6);\r\n    & > a {\r\n      text-decoration: none;\r\n      color: inherit;\r\n      color: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Success = styled.p`\r\n  text-align: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.875em;\r\n  color: rgba(0, 205, 93, 1);\r\n`;\r\n\r\nconst Register = ({ history }) => {\r\n  const [state, set] = useState({\r\n    username: { touched: false, value: \"\" },\r\n    password: { touched: false, value: \"\" },\r\n    passwordConfirm: { touched: false, value: \"\" },\r\n    firstname: { touched: false, value: \"\" },\r\n    lastname: { touched: false, value: \"\" },\r\n    email: { touched: false, value: \"\" }\r\n  });\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleBlur = e =>\r\n    set({ ...state, [e]: { ...state[e], touched: true } });\r\n\r\n  const handleChange = (val, e) => {\r\n    set({ ...state, [e]: { ...state[e], value: val } });\r\n  };\r\n\r\n  const validation = () => ({\r\n    username: state.username.value.trim() !== \"\",\r\n    password: state.password.value.trim() !== \"\",\r\n    passwordConfirm:\r\n      state.password.value.trim() === state.passwordConfirm.value.trim(),\r\n    firstname: state.firstname.value.trim() !== \"\",\r\n    lastname: state.lastname.value.trim() !== \"\",\r\n    email: state.email.value.trim() !== \"\"\r\n  });\r\n\r\n  const errors = validation();\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const resp = await fetch(\"/api/register\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"include\",\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          username: state.username.value,\r\n          password: state.password.value,\r\n          firstname: state.firstname.value,\r\n          lastname: state.lastname.value,\r\n          email: state.email.value\r\n        })\r\n      });\r\n      if (resp.status === 201) {\r\n        setSuccess(true);\r\n        return setTimeout(() => history.push(\"/login\"), 3000);\r\n      } else if (resp.status === 409) {\r\n        return setError(\"Username and/or email already exist!\");\r\n      } else {\r\n        return setError(\"Issue during registration!\");\r\n      }\r\n    } catch (err) {\r\n      return setError(\"Issue during registration!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Form title=\"Register\" error={error} onSubmit={handleSubmit}>\r\n        {success && (\r\n          <Success>Registration successful, Redirecting to login!</Success>\r\n        )}\r\n        <Input\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={state.username.value}\r\n          error={state.username.touched && !errors[\"username\"]}\r\n          onBlur={() => handleBlur(\"username\")}\r\n          onChange={e => handleChange(e.target.value, \"username\")}\r\n          autocomplete=\"username\"\r\n        />\r\n        <Input\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={state.password.value}\r\n          error={state.password.touched && !errors[\"password\"]}\r\n          onBlur={() => handleBlur(\"password\")}\r\n          onChange={e => handleChange(e.target.value, \"password\")}\r\n          autocomplete=\"password\"\r\n        />\r\n        <Input\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          name=\"passwordConfirm\"\r\n          value={state.passwordConfirm.value}\r\n          error={state.passwordConfirm.touched && !errors[\"passwordConfirm\"]}\r\n          onBlur={() => handleBlur(\"passwordConfirm\")}\r\n          onChange={e => handleChange(e.target.value, \"passwordConfirm\")}\r\n          autocomplete=\"password\"\r\n        />\r\n        <Input\r\n          label=\"Firstname\"\r\n          type=\"text\"\r\n          name=\"firstname\"\r\n          value={state.firstname.value}\r\n          error={state.firstname.touched && !errors[\"firstname\"]}\r\n          onBlur={() => handleBlur(\"firstname\")}\r\n          onChange={e => handleChange(e.target.value, \"firstname\")}\r\n          autocomplete=\"firstname\"\r\n        />\r\n        <Input\r\n          label=\"Lastname\"\r\n          type=\"text\"\r\n          name=\"lastname\"\r\n          value={state.lastname.value}\r\n          error={state.lastname.touched && !errors[\"lastname\"]}\r\n          onBlur={() => handleBlur(\"lastname\")}\r\n          onChange={e => handleChange(e.target.value, \"lastname\")}\r\n          autocomplete=\"lastname\"\r\n        />\r\n        <Input\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={state.email.value}\r\n          error={state.email.touched && !errors[\"email\"]}\r\n          onBlur={() => handleBlur(\"email\")}\r\n          onChange={e => handleChange(e.target.value, \"email\")}\r\n          autocomplete=\"email\"\r\n        />\r\n        <Button disabled={!Object.keys(errors).some(x => errors[x])}>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <p>\r\n        Already have an account? <Link to=\"/login\">Login</Link>\r\n      </p>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withTheme(Register);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AvatarWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst AvatarImg = styled.div`\r\n  position: relative;\r\n  border-radius: 50%;\r\n  width: ${props => props.size};\r\n  height: ${props => props.size};\r\n  padding: 2px;\r\n  box-sizing: unset;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  background-image: url(${props => props.image});\r\n  background-position: center;\r\n  background-size: cover;\r\n  background-clip: padding-box;\r\n`;\r\n\r\nconst Activity = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: ${props => (props.active ? \"#00C853\" : \"#d50000\")};\r\n`;\r\n\r\nconst Avatar = ({\r\n  image,\r\n  username,\r\n  size = \"24px\",\r\n  active,\r\n  onClick,\r\n  className,\r\n  displayStatus = false,\r\n}) => (\r\n  <AvatarWrapper className={className} onClick={onClick}>\r\n    <AvatarImg size={size} image={image} alt={username}>\r\n      {displayStatus && <Activity active={active} />}\r\n    </AvatarImg>\r\n  </AvatarWrapper>\r\n);\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0.5em 1em;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: ${props =>\r\n    props.selected && props.theme.elemBackgroundHover};\r\n  border-radius: 12px;\r\n  margin: 0 0.5rem;\r\n  color: ${props => props.theme.backgroundColor};\r\n  transition: ${props => props.theme.transition};\r\n  &:hover {\r\n    background-color: ${props => props.theme.elemBackgroundHover};\r\n  }\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  margin-left: 0.75em;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.6725em;\r\n  color: inherit;\r\n  margin: 0;\r\n`;\r\n\r\nconst LastMessage = styled(Name)`\r\n  font-size: 0.6225em;\r\n  color: inherit;\r\n`;\r\n\r\nconst LastMessageTime = styled(LastMessage)`\r\n  color: inherit;\r\n`;\r\n\r\nconst Listitem = ({\r\n  onClick,\r\n  onContextMenu,\r\n  chatActive,\r\n  username,\r\n  avatar,\r\n  userActive,\r\n  displayStatus,\r\n  message = \"\",\r\n  timestamp = null\r\n}) => (\r\n  <Wrapper\r\n    onClick={onClick}\r\n    selected={chatActive}\r\n  >\r\n    <Avatar\r\n      active={userActive}\r\n      username={username}\r\n      displayStatus={displayStatus}\r\n      image={avatar}\r\n    />\r\n    <Column>\r\n      <Name>{username}</Name>\r\n      <LastMessage>{message}</LastMessage>\r\n    </Column>\r\n    {timestamp && (\r\n      <LastMessageTime>\r\n        {new Date(timestamp).toLocaleTimeString().slice(0, 5)}\r\n      </LastMessageTime>\r\n    )}\r\n  </Wrapper>\r\n);\r\n\r\nexport default withTheme(Listitem);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0.5em 1em;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  background-color: ${props => props.selected && \"rgba(0, 0, 0, 0.075)\"};\r\n  border-radius: 12px;\r\n  margin: 0 .5rem;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.075);\r\n  }\r\n`;\r\n\r\nconst NotificationText = styled.div`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 0.65em;\r\n  padding: 0.25rem 0;\r\n  color: rgba(0, 0, 0, 0.6);\r\n  & > span {\r\n    color: rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  outline: none;\r\n  border-radius: 0.25em;\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 0.25em;\r\n  color: rgba(0, 0, 0, 0.8);\r\n  background-color: transparent;\r\n  font-size: 0.6em;\r\n  flex-grow: 1;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n  margin: ${props => props.margin || 0};\r\n`;\r\n\r\nconst ButtonRow = styled.div`\r\n  padding: 0.25rem 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: .5rem;\r\n`;\r\n\r\nconst ListNotification = ({ id, sender, message, type, socket, image }) => {\r\n\r\n  const handleAccept = () =>\r\n    socket.emit(\"FRIEND_REQUEST_ACCEPTED\", { username: sender, id: id });\r\n\r\n  const handleDelete = () => socket.emit(\"DELETE_NOTIFICATION\", id);\r\n\r\n  const nonActionable = type === \"ERROR\" || type === \"FRIEND_REQUEST_ACCEPTED\";\r\n  const actionable = type === \"FRIEND_REQUEST\";\r\n  return (\r\n    <Wrapper>\r\n      {actionable && <Avatar username={sender} image={image} />}\r\n      <Column>\r\n        <NotificationText>\r\n          <span>{message}</span>\r\n        </NotificationText>\r\n        {actionable && (\r\n          <ButtonRow>\r\n            <Button margin=\"0 .25em 0 0\" onClick={handleAccept}>\r\n              Accept\r\n            </Button>\r\n            <Button margin=\"0 0 0 .25em\" onClick={handleDelete}>\r\n              Reject\r\n            </Button>\r\n          </ButtonRow>\r\n        )}\r\n        {nonActionable && (\r\n          <ButtonRow>\r\n            <Button onClick={handleDelete}>Dismiss</Button>\r\n          </ButtonRow>\r\n        )}\r\n      </Column>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ListNotification;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  margin: 0 0.75rem 1.5rem 0.75rem;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725rem;\r\n  color: ${props => props.theme.backgroundColor};\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 12px;\r\n  padding: 0.5rem 0.75rem;\r\n  background-color: ${props => props.theme.inputBackground};\r\n  transition: ${props => props.theme.transition};\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst SearchInput = ({ search, value, onFocus }) => (\r\n  <Wrapper>\r\n    <Input\r\n      type=\"text\"\r\n      name=\"search\"\r\n      placeholder=\"Search\"\r\n      value={value}\r\n      onFocus={onFocus}\r\n      onChange={e => search(e.target.value)}\r\n    />\r\n  </Wrapper>\r\n);\r\n\r\nexport default SearchInput;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ListItem from \"./ListItem\";\r\nimport ListNotification from \"./ListNotification\";\r\nimport SearchInput from \"./Search\";\r\nimport { ADD_CHAT, LOAD_USERS, setActiveChat } from \"../../redux/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: ${props => props.theme.border};\r\n  min-width: 280px;\r\n  overflow-y: hidden;\r\n  grid-area: lists;\r\n  padding: 1.5rem 0;\r\n  z-index: 1;\r\n  background: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n  @media (max-width: 700px) {\r\n    position: absolute;\r\n    left: ${props => (props.open ? \"64px\" : \"-100%\")};\r\n    height: 100%;\r\n    transition: all 0.25s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst Scroll = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  grid-area: lists;\r\n`;\r\n\r\nconst SectionTitle = styled.p`\r\n  text-align: center;\r\n  margin: 0.5em 0;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725em;\r\n  color: ${props => props.theme.backgroundText};\r\n  background-color: ${props => props.theme.elemBackground};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Lists = ({ socket, open, activeList, setActiveList }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const activeChat = useSelector(state => state.rootReducer.activeChat.id);\r\n  const notifications = useSelector(\r\n    state => state.rootReducer.user.notifications\r\n  );\r\n\r\n  const chats = useSelector(state => state.rootReducer.chats).filter(\r\n    d => search === \"\" || d.recipient.includes(search)\r\n  );\r\n\r\n  const friends = useSelector(state => state.rootReducer.friends).filter(\r\n    d => search === \"\" || d.username.includes(search)\r\n  );\r\n\r\n  const accounts = useSelector(state => state.rootReducer.accounts).filter(\r\n    d => search === \"\" || d.username.includes(search)\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNewChat = (username, id) => {\r\n    let check = chats.find(d => d.recipient === username);\r\n    if (check) {\r\n      dispatch(\r\n        setActiveChat({ id: check.id, recipient: username, recipientId: id })\r\n      );\r\n    } else {\r\n      socket.emit(ADD_CHAT, username);\r\n    }\r\n    setActiveList(\"chats\");\r\n  };\r\n\r\n  const disp = e => search !== \"\" || activeList === e;\r\n  const dispTitle = search !== \"\";\r\n\r\n  return (\r\n    <Wrapper open={open}>\r\n      <SearchInput\r\n        value={search}\r\n        onFocus={() => socket.emit(LOAD_USERS)}\r\n        search={setSearch}\r\n      />\r\n      <Scroll>\r\n        {dispTitle && <SectionTitle>Chats</SectionTitle>}\r\n        {disp(\"chats\") &&\r\n          chats.map(d => (\r\n            <ListItem\r\n              key={d.id}\r\n              username={d.recipient}\r\n              avatar={d.avatar}\r\n              userActive={d.active}\r\n              chatActive={activeChat === d.id}\r\n              displayStatus\r\n              onClick={() =>\r\n                dispatch(\r\n                  setActiveChat({\r\n                    id: d.id,\r\n                    recipient: d.recipient,\r\n                    recipientId: d.recipientId,\r\n                    avatar: d.avatar\r\n                  })\r\n                )\r\n              }\r\n              message={d.last_message}\r\n              timestamp={d.last_message_timestamp}\r\n            />\r\n          ))}\r\n        {dispTitle && <SectionTitle>Friends</SectionTitle>}\r\n        {disp(\"friends\") &&\r\n          friends.map(d => (\r\n            <ListItem\r\n              id={d.id}\r\n              key={d.id}\r\n              username={d.username}\r\n              onClick={() => handleNewChat(d.username, d.id)}\r\n              avatar={d.avatar}\r\n              active={d.active}\r\n              displayStatus\r\n            />\r\n          ))}\r\n        {dispTitle && (\r\n          <>\r\n            <SectionTitle>Users</SectionTitle>\r\n            {accounts.map(d => (\r\n              <ListItem\r\n                id={d.id}\r\n                key={d.id}\r\n                username={d.username}\r\n                avatar={d.avatar}\r\n                onClick={() => socket.emit(\"FRIEND_REQUEST\", d.id)}\r\n              />\r\n            ))}\r\n          </>\r\n        )}\r\n        {disp(\"notifications\") &&\r\n          notifications.map(d => (\r\n            <ListNotification\r\n              socket={socket}\r\n              id={d.id}\r\n              key={d.id}\r\n              sender={d.sender}\r\n              message={d.message}\r\n              type={d.type}\r\n              image={d.avatar}\r\n            />\r\n          ))}\r\n      </Scroll>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  border-radius: 0.5em;\r\n  background-color: ${props => props.theme.buttonBackground};\r\n  color: ${props => props.theme.buttonText};\r\n  border: ${props => props.theme.buttonBorder};\r\n  padding: 0.75em 1em;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.7em;\r\n  width: max-content;\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 1px;\r\n  height: 1px;\r\n  position: absolute;\r\n`;\r\n\r\nconst FileUpload = ({ file, className, children, text, uid }) => {\r\n  const handleChange = e => {\r\n    if (\r\n      e.currentTarget.files.length > 0 &&\r\n      e.currentTarget.files[0].type.split(\"/\")[0] === \"image\"\r\n    ) {\r\n      file(\r\n        e.currentTarget.files[0],\r\n        e.currentTarget.files[0].name.split(\".\")[1]\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Label htmlFor={uid} className={className}>\r\n      {children}\r\n      {text}\r\n      <Input type=\"file\" onChange={handleChange} id={uid} name={uid} />\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","const emojis = [\r\n  \"😀\",\r\n  \"😁\",\r\n  \"😂\",\r\n  \"🤣\",\r\n  \"😃\",\r\n  \"😄\",\r\n  \"😅\",\r\n  \"😆\",\r\n  \"😉\",\r\n  \"😊\",\r\n  \"😋\",\r\n  \"😎\",\r\n  \"😍\",\r\n  \"😘\",\r\n  \"🥰\",\r\n  \"😗\",\r\n  \"😙\",\r\n  \"😚\",\r\n  \"🙂\",\r\n  \"🤗\",\r\n  \"🤩\",\r\n  \"🤔\",\r\n  \"🤨\",\r\n  \"😐\",\r\n  \"😑\",\r\n  \"😶\",\r\n  \"🙄\",\r\n  \"😏\",\r\n  \"😣\",\r\n  \"😥\",\r\n  \"😮\",\r\n  \"🤐\",\r\n  \"😯\",\r\n  \"😪\",\r\n  \"😫\",\r\n  \"😴\",\r\n  \"😌\",\r\n  \"😛\",\r\n  \"😜\",\r\n  \"😝\",\r\n  \"🤤\",\r\n  \"😒\",\r\n  \"😓\",\r\n  \"😔\",\r\n  \"😕\",\r\n  \"🙃\",\r\n  \"🤑\",\r\n  \"😲\",\r\n  \"☹️\",\r\n  \"🙁\",\r\n  \"😖\",\r\n  \"😞\",\r\n  \"😟\",\r\n  \"😤\",\r\n  \"😢\",\r\n  \"😭\",\r\n  \"😦\",\r\n  \"😧\",\r\n  \"😨\",\r\n  \"😩\",\r\n  \"🤯\",\r\n  \"😬\",\r\n  \"😰\",\r\n  \"😱\",\r\n  \"🥵\",\r\n  \"🥶\",\r\n  \"😳\",\r\n  \"🤪\",\r\n  \"😵\",\r\n  \"😡\",\r\n  \"😠\",\r\n  \"🤬\",\r\n  \"😷\",\r\n  \"🤒\",\r\n  \"🤕\",\r\n  \"🤢\",\r\n  \"🤮\",\r\n  \"🤧\",\r\n  \"😇\",\r\n  \"🤠\",\r\n  \"🤡\",\r\n  \"🥳\",\r\n  \"🥴\",\r\n  \"🥺\",\r\n  \"🤥\",\r\n  \"🤫\",\r\n  \"🤭\",\r\n  \"🧐\",\r\n  \"🤓\",\r\n  \"😈\",\r\n  \"👿\",\r\n  \"👹\",\r\n  \"👺\",\r\n  \"💀\",\r\n  \"👻\",\r\n  \"👽\",\r\n  \"🤖\",\r\n  \"💩\",\r\n  \"😺\",\r\n  \"😸\",\r\n  \"😹\",\r\n  \"😻\",\r\n  \"😼\",\r\n  \"😽\",\r\n  \"🙀\",\r\n  \"😿\",\r\n  \"😾\"\r\n];\r\n\r\nexport default emojis;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport emojis from \"./Emojis\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  left: ${props => props.right}px;\r\n  max-width: 200px;\r\n  overflow: auto;\r\n  flex-wrap: wrap;\r\n  max-height: 200px;\r\n  border-radius: 12px;\r\n  background-color: inherit;\r\n  scrollbar-width: thin;\r\n  padding: 0.25rem;\r\n  top: ${props => props.top}px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n`;\r\n\r\nconst Emoji = styled.div`\r\n  display: flex;\r\n  color: rgba(0, 0, 0, 1);\r\n  cursor: pointer;\r\n`;\r\n\r\nconst EmojiContainer = ({ selected, right, top }) => (\r\n  <Wrapper right={right} top={top}>\r\n    {emojis.map(d => (\r\n      <Emoji key={d} onClick={() => selected(d)}>{d}</Emoji>\r\n    ))}\r\n  </Wrapper>\r\n);\r\n\r\nexport default EmojiContainer;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ADD_MESSAGE_TO_CHAT } from \"../../redux/actions\";\r\nimport { FaSmile, FaImage } from \"react-icons/fa\";\r\nimport FileUpload from \"../Common/FileUpload\";\r\nimport EmojiContainer from \"../Emoji/EmojiContainer\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5rem 0.75rem;\r\n  min-height: 2rem;\r\n  max-height: 8rem;\r\n  border-radius: 12px;\r\n  color: ${props => props.theme.backgroundColor};\r\n  background-color: ${props => props.theme.inputBackground};\r\n  transition: all 0.05s ease-in-out;\r\n  margin: 0.5rem 1.5rem 0 1.5rem;\r\n  transition: ${props => props.theme.transition};\r\n  &:focus-within {\r\n    ${props => props.theme.foregroundColor};\r\n  }\r\n`;\r\n\r\nconst Input = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: pre-wrap;\r\n  overflow-wrap: break-word;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  overflow: auto;\r\n  scrollbar-width: thin;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: 500;\r\n  font-size: 0.6725rem;\r\n  line-height: 140%;\r\n  height: 100%;\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ImageBtn = styled(FileUpload)`\r\n  background-color: transparent;\r\n  display: flex;\r\n  padding: 0;\r\n  color: inherit;\r\n  > svg {\r\n    font-size: 20px;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst EmojiBtn = styled(FaSmile)`\r\n  margin-right: 0.5rem;\r\n  color: inherit;\r\n`;\r\n\r\nconst ChatInput = ({ socket, activeChatId }) => {\r\n  const ref = useRef(null);\r\n  const [emojiSelector, set] = useState({ open: false, top: 0, right: 0 });\r\n  const placeholder = \"Enter message...\";\r\n\r\n  const handleFile = async (image, extension) => {\r\n    try {\r\n      if (activeChatId !== \"\") {\r\n        socket.emit(ADD_MESSAGE_TO_CHAT, {\r\n          image: image,\r\n          extension: extension,\r\n          chat: activeChatId\r\n        });\r\n      }\r\n    } catch (err) {\r\n      // Ignore\r\n    }\r\n  };\r\n\r\n  const sendMessage = e => {\r\n    let text = e.currentTarget.innerText.trim();\r\n    if (e.key === \"Enter\" && activeChatId !== \"\" && text !== \"\") {\r\n      socket.emit(ADD_MESSAGE_TO_CHAT, {\r\n        message: text,\r\n        chat: activeChatId\r\n      });\r\n      e.currentTarget.innerText = \"\";\r\n    }\r\n    set(false);\r\n  };\r\n\r\n  const handleFocusBlur = e => {\r\n    if (e.currentTarget.innerText.trim() === placeholder) {\r\n      e.currentTarget.innerText = \"\";\r\n    } else if (e.currentTarget.innerText.trim() === \"\") {\r\n      e.currentTarget.innerText = placeholder;\r\n    }\r\n  };\r\n\r\n  const addEmoji = icon => {\r\n    if (ref.current.innerText.trim() === placeholder) {\r\n      return (ref.current.innerText = icon);\r\n    }\r\n    return (ref.current.innerText += icon);\r\n  };\r\n\r\n  const handleEmojiSelectorOpen = e => {\r\n    if (emojiSelector.open) {\r\n      return set({ ...emojiSelector, open: false });\r\n    }\r\n    let rect = e.currentTarget.getBoundingClientRect();\r\n    return set({\r\n      open: !emojiSelector.open,\r\n      right: rect.right - 220 + rect.width,\r\n      top: rect.top - 200 - rect.height\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (ref) ref.current.innerText = placeholder;\r\n  }, [activeChatId]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Input\r\n        contentEditable=\"true\"\r\n        ref={ref}\r\n        onKeyUp={sendMessage}\r\n        onFocus={handleFocusBlur}\r\n        onBlur={handleFocusBlur}\r\n        suppressContentEditableWarning={true}\r\n      >\r\n        {placeholder}\r\n      </Input>\r\n      <EmojiBtn onClick={handleEmojiSelectorOpen} size=\"1em\" />\r\n      {emojiSelector.open && (\r\n        <EmojiContainer\r\n          selected={addEmoji}\r\n          top={emojiSelector.top}\r\n          right={emojiSelector.right}\r\n        />\r\n      )}\r\n      <ImageBtn uid=\"mms\" file={handleFile}>\r\n        <FaImage size=\"1em\" />\r\n      </ImageBtn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Img = styled.img`\r\n  max-width: 100%;\r\n  max-height: 200px;\r\n  display: ${p => (p.state === \"loaded\" ? \"unset\" : \"none\")};\r\n`;\r\n\r\nconst Image = ({ image, onClick }) => {\r\n  const [state, set] = useState(\"loading\");\r\n\r\n  return (\r\n    <>\r\n      <Img\r\n        state={state}\r\n        src={image}\r\n        onError={() => set(\"failure\")}\r\n        onLoad={() => set(\"loaded\")}\r\n        alt=\"Image not available\"\r\n        onClick={onClick}\r\n      />\r\n      {image && state === \"loading\" && <p>Loading</p>}\r\n      {image && state === \"failure\" && <p>Failure</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../Common/Avatar\";\r\nimport Image from \"./Image\";\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => (props.justify ? \"flex-start\" : \"flex-end\")};\r\n  padding: 0.25em 0;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst MessageContent = styled.div`\r\n  border-radius: ${props =>\r\n    props.borderRadius ? \".25em 1em 1em\" : \"1em .25em 1em 1em\"};\r\n  margin-left: ${props => (props.margin ? \".5rem\" : \"unset\")};\r\n  padding: ${props => (props.image ? \"0\" : \"0.5em 1em\")};\r\n  max-width: ${props => (props.image ? \"35%\" : \"unset\")};\r\n  overflow: ${props => (props.image ? \"hidden\" : \"unset\")};\r\n  display: ${props => (props.image ? \"flex\" : \"unset\")};\r\n  flex-direction: ${props => (props.image ? \"column\" : \"unset\")};\r\n  background-color: ${props => props.theme.messageBackground};\r\n  transition: ${props => props.theme.transition};\r\n  color: inherit;\r\n  & > span {\r\n    font-family: \"Roboto\", sans-serif;\r\n    text-rendering: optimizeLegibility;\r\n    font-size: 0.85em;\r\n    color: inherit;\r\n  }\r\n`;\r\n\r\nconst Message = ({\r\n  received = false,\r\n  message,\r\n  recipient,\r\n  avatar,\r\n  image,\r\n  onClick\r\n}) => (\r\n  <Wrapper justify={received}>\r\n    {received && <Avatar size=\"20px\" name={recipient} image={avatar} />}\r\n    <MessageContent margin={received} borderRadius={received} image={image}>\r\n      <span>{message}</span>\r\n      {image && <Image image={image} onClick={onClick} />}\r\n    </MessageContent>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n`;\r\n\r\nconst Shadow = styled.div`\r\n  position: absolute;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Image = styled.img`\r\nmax-height: 90vh;\r\nmax-width: 90vw;\r\nborder-radius: 1em;\r\n`\r\n\r\nconst ImageViewer = ({ image, callback }) => (\r\n  <Wrapper>\r\n    <Shadow onClick={callback} />\r\n    <Image src={image} onClick={callback}/>\r\n  </Wrapper>\r\n);\r\n\r\nexport default ImageViewer;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Message from \"./Message\";\r\nimport { LOAD_ACTIVE_CHAT_MESSAGES } from \"../../redux/actions\";\r\nimport ImageViewer from \"./ImageViewer\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  grid-area: messages;\r\n  justify-content: space-between;\r\n  padding: 1.5rem 0;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Scrollable = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n  scrollbar-width: thin;\r\n  padding: 0 1.5rem;\r\n`;\r\n\r\nconst Messages = ({ socket }) => {\r\n  const ScrollRef = useRef(null);\r\n  const chat = useSelector(state => state.rootReducer.activeChat);\r\n  const [imageViewer, set] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chat.id) socket.emit(LOAD_ACTIVE_CHAT_MESSAGES, chat.id);\r\n  }, [socket, chat.id]);\r\n\r\n  useEffect(() => {\r\n    ScrollRef.current.scrollTop = ScrollRef.current.scrollHeight;\r\n  }, [chat.messages]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {imageViewer && (\r\n        <ImageViewer image={imageViewer} callback={() => set(null)} />\r\n      )}\r\n      <Scrollable ref={ScrollRef}>\r\n        {chat.id !== null &&\r\n          chat.messages.map(d => (\r\n            <Message\r\n              key={d.id}\r\n              received={d.username === chat.recipient}\r\n              message={d.message}\r\n              recipient={chat.recipient}\r\n              avatar={chat.avatar}\r\n              image={d.image}\r\n              onClick={() => set(d.image)}\r\n            />\r\n          ))}\r\n      </Scrollable>\r\n      <ChatInput socket={socket} activeChatId={chat.id} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  FaUserFriends,\r\n  FaComments,\r\n  FaBell,\r\n  FaCog,\r\n  FaMoon\r\n} from \"react-icons/fa\";\r\nimport Avatar from \"./Common/Avatar\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  grid-area: nav;\r\n  padding: 1.5rem 0;\r\n  justify-content: space-between;\r\n  z-index: 2;\r\n  border-right: ${props => props.theme.border};\r\n  background: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Contacts = styled(FaUserFriends)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"friends\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Chats = styled(FaComments)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"chats\" ? p.theme.foregroundColor : p.theme.backgroundColor};\r\n`;\r\nconst Notifications = styled(FaBell)`\r\n  padding: 1em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"notifications\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n`;\r\n\r\nconst Settings = styled(FaCog)`\r\n  padding: 0.5em 0;\r\n  box-sizing: content-box;\r\n  color: ${p =>\r\n    p.active === \"settings\"\r\n      ? p.theme.foregroundColor\r\n      : p.theme.backgroundColor};\r\n`;\r\n\r\nconst NightMode = styled(FaMoon)`\r\n  padding: 0.5em 0;\r\n  box-sizing: content-box;\r\n  color: ${p => p.theme.nightModeBtn};\r\n`;\r\n\r\nconst ListOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst AppOptions = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  margin: 0 0 0.75rem 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Navbar = ({\r\n  avatar,\r\n  activeList,\r\n  setActiveList,\r\n  setPos,\r\n  setNightModeState,\r\n  nightModeState\r\n}) => (\r\n  <Wrapper>\r\n    <ListOptions>\r\n      <StyledAvatar size=\"32px\" image={avatar} onClick={setPos} />\r\n      <Contacts\r\n        size=\"20px\"\r\n        active={activeList}\r\n        onClick={() => setActiveList(\"friends\")}\r\n      />\r\n      <Chats\r\n        size=\"20px\"\r\n        active={activeList}\r\n        onClick={() => setActiveList(\"chats\")}\r\n      />\r\n      <Notifications\r\n        size=\"20px\"\r\n        active={activeList}\r\n        onClick={() => setActiveList(\"notifications\")}\r\n      />\r\n    </ListOptions>\r\n    <AppOptions>\r\n      <NightMode\r\n        size=\"20px\"\r\n        onClick={() => setNightModeState(!nightModeState)}\r\n      />\r\n      <Settings\r\n        size=\"20px\"\r\n        active={activeList}\r\n        onClick={() => setActiveList(\"settings\")}\r\n      />\r\n    </AppOptions>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"./Common/Avatar\";\r\nimport { ACCOUNT_UPDATE } from \"../redux/actions\";\r\nimport FileUpload from \"./Common/FileUpload\";\r\nimport ToggleSwitch from \"./Common/ToggleSwitch\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 3;\r\n  color: ${props => props.theme.backgroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst BackgroundShadow = styled.div`\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  background-color: inherit;\r\n  border-radius: 0.25em;\r\n  padding: 1em;\r\n  flex-basis: 500px;\r\n  z-index: 4;\r\n  background-color: ${props => props.theme.background};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: ${props => props.justify || \"unset\"};\r\n  margin: ${props => props.margin || \"0 0 1.5rem 0;\"};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 400;\r\n  color: inherit;\r\n  font-size: 1.25rem;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nconst Option = styled.p`\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-weight: 500;\r\n  color: inherit;\r\n  font-size: 0.8em;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\nconst Description = styled(Option)`\r\n  font-weight: 400;\r\n  font-size: 0.6em;\r\n  color: ${props => props.theme.foregroundColor};\r\n  transition: ${props => props.theme.transition};\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Settings = ({ socket, setActiveList, visible_in_searches, avatar }) => {\r\n  const handleVisibilityUpdate = () =>\r\n    socket.emit(ACCOUNT_UPDATE, {\r\n      update: \"visible_in_searches\",\r\n      value: !visible_in_searches\r\n    });\r\n\r\n  const handleFile = async (file, extension) => {\r\n    socket.emit(ACCOUNT_UPDATE, {\r\n      update: \"avatar\",\r\n      extension: extension,\r\n      value: file\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BackgroundShadow onClick={() => setActiveList(\"chats\")} />\r\n      <Modal>\r\n        <Row>\r\n          <Avatar image={avatar} />\r\n          <Title>Account Settings</Title>\r\n        </Row>\r\n        <Row justify=\"space-between\" margin=\"0.75rem 0\">\r\n          <Column>\r\n            <Option>Account Visibility</Option>\r\n            <Description>\r\n              Enable other users to find your account via search.\r\n            </Description>\r\n          </Column>\r\n          <ToggleSwitch\r\n            onClick={handleVisibilityUpdate}\r\n            state={visible_in_searches}\r\n          />\r\n        </Row>\r\n        <Row justify=\"space-between\" margin=\"0.75rem 0\">\r\n          <Column>\r\n            <Option>Change Avatar</Option>\r\n            <Description>Upload an image to use as an avatar.</Description>\r\n          </Column>\r\n          <FileUpload uid=\"avatar\" file={handleFile} text=\"Upload Image\" />\r\n        </Row>\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { IoIosClose } from \"react-icons/io\";\r\nimport { ERROR } from \"../../redux/actions\";\r\nimport Avatar from \"../Common/Avatar\";\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 12px;\r\n  align-items: center;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  background-color: ${props =>\r\n    props.bgColor ? \"rgba(211, 47, 47, 1)\" : \"rgb(245, 245, 245)\"};\r\n  padding: 0.5rem 1rem;\r\n  min-width: 280px;\r\n  margin: 0.25rem;\r\n`;\r\n\r\nconst DismissBtn = styled.span`\r\n  padding: 0.25rem;\r\n  border-radius: 50%;\r\n  margin-left: 1rem;\r\n  display: flex;\r\n  margin-right: -0.5rem;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n  &:active {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n`;\r\n\r\nconst Message = styled.span`\r\n  font-size: 0.75rem;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 400;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  line-height: 1.43;\r\n  letter-spacing: 0.01071em;\r\n  padding: 0.5rem 0rem;\r\n`;\r\n\r\nconst CloseBtn = styled(IoIosClose)`\r\n  font-size: 1.85rem;\r\n  color: rgba(0, 0, 0, 0.87);\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst Snackbar = ({\r\n  uuid,\r\n  type,\r\n  message,\r\n  dismiss,\r\n  avatar = null,\r\n  sender = null\r\n}) => {\r\n  useEffect(() => {\r\n    if (type !== ERROR) {\r\n      setTimeout(() => dismiss(uuid), 3000);\r\n    }\r\n  }, [dismiss, type, uuid]);\r\n  return (\r\n    <Wrapper bgColor={type === ERROR}>\r\n      {avatar && <StyledAvatar image={avatar} username={sender} />}\r\n      <Message>{message}</Message>\r\n      <DismissBtn onClick={() => dismiss(uuid)}>\r\n        <CloseBtn size=\"1em\" />\r\n      </DismissBtn>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Snackbar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Snackbar from \"./Snackbar\";\r\nimport { DISMISS_NOTIFICATION } from \"../../redux/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  right: 1rem;\r\n  top: 1rem;\r\n  max-height: calc(100vh - 1rem);\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst SnackbarContainer = ({ socket }) => {\r\n  const notifications = useSelector(\r\n    state => state.rootReducer.user.notifications\r\n  );\r\n\r\n  const dismiss = id => socket.emit(DISMISS_NOTIFICATION, id);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {notifications.map(\r\n        d =>\r\n          !d.dismissed && (\r\n            <Snackbar\r\n              type={d.type}\r\n              key={d.id}\r\n              uuid={d.id}\r\n              message={d.message}\r\n              dismiss={dismiss}\r\n              avatar={d.avatar}\r\n            />\r\n          )\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SnackbarContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logout } from \"../redux/actions\";\r\nimport Avatar from \"./Common/Avatar\";\r\nimport Button from \"./Common/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  max-width: 150px;\r\n  top: ${props => props.top}px;\r\n  left: ${props => props.right}px;\r\n  background: ${props => props.theme.background};\r\n  padding: 0.5rem;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  width: 100%;\r\n  z-index: 2;\r\n  transition: ${props => props.theme.transition};\r\n  & > button {\r\n    font-size: 0.7rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Username = styled.div`\r\n  font-size: 0.85rem;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  font-weight: 500;\r\n  color: ${props => props.theme.backgroundColor};\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst AccountPopup = ({ top, right, avatar, username, setActiveList }) => {\r\n  const dispatch = useDispatch();\r\n  const logoutFunc = async () => {\r\n    const resp = await fetch(\"/api/logout\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"include\"\r\n    });\r\n    if (resp.status === 200) {\r\n      dispatch(logout());\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper top={top} right={right}>\r\n      <Avatar image={avatar} size=\"32px\" />\r\n      <Username>{username}</Username>\r\n      <Button onClick={logoutFunc}>Logout</Button>\r\n      <Button onClick={() => setActiveList(\"settings\")}>Settings</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default AccountPopup;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Lists from \"../components/Lists/ListContainer\";\r\nimport Messages from \"../components/Messages/MessagesContainer\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Settings from \"../components/Settings\";\r\nimport SnackbarContainer from \"../components/Snackbar/SnackbarContainer\";\r\nimport AccountPopup from \"../components/AccountPopup\";\r\nimport { SET_NIGHT_MODE } from \"../redux/actions\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 64px auto 1fr;\r\n  grid-template-rows: 1fr;\r\n  grid-template-areas: \"nav lists messages\";\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: #f7f7f7;\r\n`;\r\n\r\nconst Home = ({ socket, nightModeState }) => {\r\n  const user = useSelector(state => state.rootReducer.user);\r\n  const [listState, setListState] = useState({ active: \"chats\", open: false });\r\n  const [accountOverview, set] = useState({ open: false, top: 0, right: 0 });\r\n\r\n  const handleNavClick = e => {\r\n    if (e === listState.active) {\r\n      setListState({ ...listState, open: !listState.open });\r\n    } else {\r\n      setListState({ ...listState, open: true, active: e });\r\n    }\r\n  };\r\n\r\n  const handleNavAvatarClick = e => {\r\n    if (accountOverview.open) {\r\n      set({ ...accountOverview, open: false });\r\n    } else {\r\n      let rect = e.currentTarget.getBoundingClientRect();\r\n      set({\r\n        open: true,\r\n        right: rect.right + rect.height / 3,\r\n        top: rect.top + rect.width / 2\r\n      });\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const handleModeChange = () => dispatch({ type: SET_NIGHT_MODE });\r\n  const handleListChange = e => setListState({ ...listState, active: e });\r\n  return (\r\n    socket && (\r\n\r\n        <Wrapper>\r\n          {accountOverview.open && (\r\n            <AccountPopup\r\n              socket={socket}\r\n              top={accountOverview.top}\r\n              right={accountOverview.right}\r\n              avatar={user.avatar}\r\n              username={user.username}\r\n              setActiveList={handleListChange}\r\n            />\r\n          )}\r\n          <Navbar\r\n            socket={socket}\r\n            avatar={user.avatar}\r\n            activeList={listState.active}\r\n            setActiveList={handleNavClick}\r\n            setPos={handleNavAvatarClick}\r\n            setNightModeState={handleModeChange}\r\n            nightModeState={nightModeState}\r\n          />\r\n          <Lists\r\n            socket={socket}\r\n            open={listState.open}\r\n            activeList={listState.active}\r\n            setActiveList={handleListChange}\r\n          />\r\n          <Messages socket={socket} />\r\n          <SnackbarContainer socket={socket} />\r\n          {listState.active === \"settings\" && (\r\n            <Settings\r\n              socket={socket}\r\n              visible_in_searches={user.visible_in_searches}\r\n              avatar={user.avatar}\r\n              setActiveList={handleListChange}\r\n            />\r\n          )}\r\n        </Wrapper>\r\n\r\n    )\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  LOAD_FRIENDS,\r\n  LOAD_CHATS,\r\n  LOAD_USERS,\r\n  LOAD_NOTIFICATIONS,\r\n  ADD_MESSAGE_TO_CHAT,\r\n  ADD_FRIEND,\r\n  ADD_CHAT,\r\n  ADD_NOTIFICATION,\r\n  SET_FRIEND_ONLINE,\r\n  SET_FRIEND_OFFLINE,\r\n  DISMISS_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n  LOAD_ACTIVE_CHAT_MESSAGES,\r\n  ERROR,\r\n  ACCOUNT_UPDATE,\r\n  REAUTH,\r\n  logout,\r\n  loadChats,\r\n  loadFriends,\r\n  loadUsers,\r\n  loadNotifications,\r\n  addMessageToChat,\r\n  addFriend,\r\n  addNotification,\r\n  setFriendOnline,\r\n  setFriendOffline,\r\n  addChat,\r\n  setActiveChat,\r\n  dismissNotification,\r\n  deleteNotification,\r\n  loadMessages,\r\n  error,\r\n  updateAccount\r\n} from \"../redux/actions\";\r\n\r\nconst useSocket = () => {\r\n  const loggedIn = useSelector(state => state.rootReducer.user.loggedIn);\r\n  const dispatch = useDispatch();\r\n  const socket = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // If user is logged in create socket connection and set up listeners.\r\n    if (loggedIn) {\r\n      socket.current = io(\"/\");\r\n      socket.current.on(REAUTH, () => dispatch(logout()));\r\n      socket.current.on(LOAD_CHATS, e => dispatch(loadChats(e)));\r\n      socket.current.on(LOAD_FRIENDS, e => dispatch(loadFriends(e)));\r\n      socket.current.on(LOAD_USERS, e => dispatch(loadUsers(e)));\r\n      socket.current.on(LOAD_NOTIFICATIONS, e =>\r\n        dispatch(loadNotifications(e))\r\n      );\r\n      socket.current.on(LOAD_ACTIVE_CHAT_MESSAGES, e =>\r\n        dispatch(loadMessages(e))\r\n      );\r\n      socket.current.on(ADD_MESSAGE_TO_CHAT, e => {\r\n        dispatch(addMessageToChat(e));\r\n      });\r\n      socket.current.on(ADD_FRIEND, e => dispatch(addFriend(e)));\r\n      socket.current.on(ADD_CHAT, e => {\r\n        dispatch(addChat(e));\r\n        dispatch(\r\n          setActiveChat({\r\n            id: e.id,\r\n            recipient: e.recipient,\r\n            recipientId: e.recipientId,\r\n            avatar: e.avatar\r\n          })\r\n        );\r\n      });\r\n      socket.current.on(ADD_NOTIFICATION, e => dispatch(addNotification(e)));\r\n      socket.current.on(DISMISS_NOTIFICATION, e =>\r\n        dispatch(dismissNotification(e))\r\n      );\r\n      socket.current.on(DELETE_NOTIFICATION, e =>\r\n        dispatch(deleteNotification(e))\r\n      );\r\n      socket.current.on(SET_FRIEND_ONLINE, e => dispatch(setFriendOnline(e)));\r\n      socket.current.on(SET_FRIEND_OFFLINE, e => dispatch(setFriendOffline(e)));\r\n      socket.current.on(ERROR, e => dispatch(error(e)));\r\n      socket.current.on(ACCOUNT_UPDATE, e => dispatch(updateAccount(e)));\r\n    } else {\r\n      socket.current && socket.current.close();\r\n    }\r\n  }, [loggedIn, dispatch]);\r\n\r\n  return [socket, loggedIn];\r\n};\r\n\r\nexport default useSocket;\r\n","import React from \"react\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Home from \"./pages/Home\";\r\nimport useSocket from \"./hooks\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  #root {\r\n    height: 100vh;\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [socket, auth] = useSocket();\r\n  const nightModeState = useSelector(state => state.rootReducer.ui.mode);\r\n  const theme = {\r\n    background: nightModeState ? \"rgb(31, 31, 31)\" : \"rgb(245, 245, 245)\",\r\n    border: nightModeState\r\n      ? \"1px solid rgba(245,245,245,0.1)\"\r\n      : \"1px solid rgba(0,0,0,.1)\",\r\n    messageBackground: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.2)\"\r\n      : \"rgba(0, 0, 0, 0.075)\",\r\n    inputBackground: nightModeState ? \"#4a4a4a\" : \"rgba(0, 0, 0, 0.1)\",\r\n    elemBackground: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.2)\"\r\n      : \"rgba(245, 245, 245, 0.2)\",\r\n    elemBackgroundHover: nightModeState\r\n      ? \"rgba(245, 245, 245, .05)\"\r\n      : \"rgba(0, 0, 0, .05)\",\r\n    foregroundColor: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.8)\"\r\n      : \"rgba(0, 0, 0, 0.8)\",\r\n    backgroundColor: nightModeState\r\n      ? \"rgba(245, 245, 245, 0.6)\"\r\n      : \"rgba(0, 0, 0, 0.6)\",\r\n    nightModeBtn: nightModeState ? \"#f0c420\" : \"rgba(0, 0, 0, 0.5)\",\r\n\r\n    buttonBackground: nightModeState ? \"transparent\" : \"rgba(0, 0, 0, 0.8)\",\r\n    buttonBorder: nightModeState ? \"1px solid rgba(245,245,245,0.1)\" : \"none\",\r\n    buttonText: \"rgba(245, 245, 245, 0.8)\",\r\n    transition: \"all .5s cubic-bezier(0.39, 0.575, 0.565, 1)\"\r\n  };\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      {!auth ? (\r\n        <Route exact path=\"/login\" component={Login} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n      {!auth ? (\r\n        <Route exact path=\"/register\" component={Register} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        render={() =>\r\n          auth ? <Home socket={socket.current} /> : <Redirect to=\"/login\" />\r\n        }\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  LOGIN,\r\n  LOGOUT,\r\n  LOAD_CHATS,\r\n  LOAD_FRIENDS,\r\n  LOAD_USERS,\r\n  ADD_FRIEND,\r\n  SET_FRIEND_OFFLINE,\r\n  SET_FRIEND_ONLINE,\r\n  LOAD_NOTIFICATIONS,\r\n  ADD_CHAT,\r\n  ADD_MESSAGE_TO_CHAT,\r\n  ADD_NOTIFICATION,\r\n  DISMISS_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n  SET_ACTIVE_CHAT,\r\n  LOAD_ACTIVE_CHAT_MESSAGES,\r\n  ACCOUNT_UPDATE,\r\n  SET_NIGHT_MODE\r\n} from \"./actions\";\r\nconst initialState = {\r\n  friends: [],\r\n  chats: [],\r\n  accounts: [],\r\n  activeChat: {\r\n    id: null,\r\n    recipientId: null,\r\n    messages: []\r\n  },\r\n  user: {\r\n    loggedIn: false,\r\n    id: null,\r\n    username: null,\r\n    avatar: null,\r\n    notifications: [],\r\n    visible_in_searches: false\r\n  },\r\n  ui: {\r\n    mode: false\r\n  }\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, loggedIn: true, ...action.payload }\r\n      };\r\n\r\n    case LOGOUT:\r\n      return initialState;\r\n\r\n    case SET_NIGHT_MODE:\r\n      return { ...state, ui: { mode: !state.ui.mode } };\r\n\r\n    case ACCOUNT_UPDATE:\r\n      return { ...state, user: { ...state.user, ...action.payload } };\r\n\r\n    case LOAD_FRIENDS:\r\n      return { ...state, friends: [...action.payload] };\r\n\r\n    case LOAD_CHATS:\r\n      return { ...state, chats: [...action.payload] };\r\n\r\n    case LOAD_USERS:\r\n      return { ...state, accounts: [...action.payload] };\r\n\r\n    case ADD_FRIEND:\r\n      return { ...state, friends: friendsReducer(state.friends, action) };\r\n\r\n    case ADD_CHAT:\r\n    case ADD_MESSAGE_TO_CHAT:\r\n      return {\r\n        ...state,\r\n        chats: chatsReducer(state.chats, action),\r\n        activeChat: activeChatReducer(state.activeChat, action)\r\n      };\r\n\r\n    case SET_ACTIVE_CHAT:\r\n    case LOAD_ACTIVE_CHAT_MESSAGES:\r\n      return {\r\n        ...state,\r\n        activeChat: activeChatReducer(state.activeChat, action)\r\n      };\r\n\r\n    case SET_FRIEND_ONLINE:\r\n    case SET_FRIEND_OFFLINE:\r\n      return {\r\n        ...state,\r\n        friends: friendsReducer(state.friends, action),\r\n        chats: chatsReducer(state.chats, action)\r\n      };\r\n\r\n    case ADD_NOTIFICATION:\r\n    case LOAD_NOTIFICATIONS:\r\n    case DISMISS_NOTIFICATION:\r\n    case DELETE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          ...state.user,\r\n          notifications: notificationsReducer(state.user.notifications, action)\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst notificationsReducer = (\r\n  state = initialState.user.notifications,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOAD_NOTIFICATIONS:\r\n      return [...action.payload];\r\n    case ADD_NOTIFICATION:\r\n      return [...state, action.payload];\r\n    case DELETE_NOTIFICATION:\r\n      let j = state.findIndex(i => i.id === action.payload);\r\n      return [...state.slice(0, j), ...state.slice(j + 1)];\r\n    case DISMISS_NOTIFICATION:\r\n      let k = state.findIndex(i => i.id === action.payload);\r\n      return [\r\n        ...state.slice(0, k),\r\n        { ...state[k], dismissed: true },\r\n        ...state.slice(k + 1)\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst friendsReducer = (state = initialState.friends, action) => {\r\n  switch (action.type) {\r\n    case ADD_FRIEND:\r\n      return [...state, action.payload];\r\n    case SET_FRIEND_ONLINE:\r\n      return state.map(d =>\r\n        d.id === action.payload ? { ...d, active: true } : d\r\n      );\r\n    case SET_FRIEND_OFFLINE:\r\n      return state.map(d =>\r\n        d.id === action.payload ? { ...d, active: false } : d\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst chatsReducer = (state = initialState.chats, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHAT:\r\n      return [...state, action.payload];\r\n    case ADD_MESSAGE_TO_CHAT:\r\n      return state.map(d =>\r\n        d.id === action.payload.chatId\r\n          ? {\r\n              ...d,\r\n              last_message: action.payload.last_message,\r\n              last_message_timestamp: action.payload.last_message_timestamp\r\n            }\r\n          : d\r\n      );\r\n    case SET_FRIEND_ONLINE:\r\n      return state.map(d =>\r\n        d.recipientId === action.payload ? { ...d, active: true } : d\r\n      );\r\n    case SET_FRIEND_OFFLINE:\r\n      return state.map(d =>\r\n        d.recipientId === action.payload ? { ...d, active: false } : d\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst activeChatReducer = (state = initialState.activeChat, action) => {\r\n  switch (action.type) {\r\n    case ADD_MESSAGE_TO_CHAT:\r\n      if (action.payload.chatId !== state.id) return state;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload.message]\r\n      };\r\n    case LOAD_ACTIVE_CHAT_MESSAGES:\r\n      return { ...state, messages: [...action.payload] };\r\n    case SET_ACTIVE_CHAT:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  rootReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport localForage from \"localforage\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage: localForage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(persistedReducer);\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}